.TH man 3 "October 20, 2022" "V1.0" "_printf man page"
.SH NAME
.B _printf
- Formatted output conversion.
.SH SYNOPSIS
.B #include <stdlib.h> "main.h"

.B int _printf(const char *
.I format
.B , ...)
.SH DESCRIPTION
.B _printf()
Prints to standard output under the control of a 
.I format
string that specifies how subsequent arguments are converted for output. 
.SH Return value
On successful return, these functions return the number of characters printed, excluding the null byte used to end output to strings.

If an output error is encountered, a negative value is returned.
.SH Format of the format string
The format string is composed of 0 or more directives (ordinary characters that are not %), which are copied to the output stream. The format string is also composed of conversion specifications, each of which result in fetching zero or more subsequent arguments. Each conversion specification is introduced by the character % and ends with the conversion specifier.
The argument must correspond properly with the conversion specifier. By default, the arguments are used in the order given.
.SH The conversion specifier
A character that specifies the type of conversion to be applied. The conversion specifiers and their meanings are:
.TP
.BR c
The int argument is converted to an unsigned char, then the resulting character is written
.TP
.B s
The const char * argument is expected to be a pointer to an array of character type (pointer to a string). Characters from the array are written up to a terminating null byte, but do ot include the terminating null byte.
.TP
.B S
Prints a string. Non printable characters are printed as "\x" followed by their ASCII values in two digit hexadecimal
.TP
.B d, i
The int argument is converted to signed decimal notation.
.TP
.B x, X
The unsigned int argument is converted to unsigned lowercase hexadecimal notation(x), or unsigned uppercase hexadecimal notation(X).
.TP
.B u
The unsigned int argument is converted to unsigned decimal notation
.TP
.B o, b
The unsigned int argument is converted to unsigned octal notation(o) or binary notation(b).
.TP
.B p
Address is printed in hexadecimal.
.TP
.B r
Prints a string in reverse.
.TP
.B R
Prints a string converted to rot13
.TP
.B %
A '%' is written but no argument is converted. The complete version specification is '%%'


.SH EXAMPLES:
.RS
.SS --------------
.I
.SS Character[%c]:
.RS
.SS --------------
.SS Input         _printf("This is a char: [%c]", 'C');
.SS Output	   This is a char: [C]
.SS --------------
.I
.SS Literal String:
.RS
.SS --------------
.SS Input	 _printf("Let's try to printf a simple sentence");
.SS Output	  Let's try to printf a simple sentence
.SS --------------
.I
.SS Integers[%i]:
.RS
.SS --------------
.SS Input	 _printf("This is a number: [%i]", 20);
.SS Output	  This is a number: [20]
.SS --------------
.RE

.SH SEE ALSO
.I printf(3)
.SH BUGS
No known bugs.
Report _printf Jack Mtembete, Reinhard Nzomo
.SH AUTHORS
Jack Mtembete, Reinhard Nzomo, ALX Cohort 9.
